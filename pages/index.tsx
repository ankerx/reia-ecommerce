import { dehydrate, QueryClient } from "@tanstack/react-query";
import { NextPage } from "next";
import Head from "next/head";
import { useCartContext } from "../context/useCartContext";
import { useAddToCart, useCart } from "../core/hooks/useCart";
import { getProducts, useProducts } from "../core/hooks/useProducts";
import { Checkout } from "../modules/cart/Checkout";
import { ProductItem } from "../modules/products/Product";
import { LoadingSpinner } from "../modules/UI/LoadingSpinner";

const Home: NextPage = () => {
  const { toggleMenu, isOpen } = useCartContext();
  const { data: products, isLoading, error } = useProducts();

  const { data } = useCart();
  console.log(products);
  console.log(data);

  if (isLoading) return <LoadingSpinner />;

  if (error) return <p>'An error has occurred:{error.message}'</p>;

  return (
    <div>
      <Head>
        <title>Reia - massage</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className="text-red-500">hello</h1>
        {data?.total_items}
        {products.data.map((product) => (
          <ProductItem key={product.id} product={product} />
        ))}
        {isOpen && <Checkout />}

        <button onClick={() => toggleMenu()}>Open cart</button>
      </main>
    </div>
  );
};

export default Home;

export async function getStaticProps() {
  const queryClient = new QueryClient();

  await queryClient.prefetchQuery(["products"], getProducts);

  return {
    props: { dehydratedState: dehydrate(queryClient) },
  };
}
